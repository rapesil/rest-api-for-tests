buildscript {
	ext {
		set('springCloudVersion', "2020.0.2")
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
	}
}

plugins {

	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'application'
	id 'idea'
}

apply plugin: 'jacoco'
apply plugin: 'info.solidsoft.pitest'

apply from: "$rootDir/gradle/integrationTest.gradle"

group = 'com.peixoto.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	mavenCentral()
}

def excludeSourceDirs = [
		'**/config/**',
		'**/swagger/**',
		'**/exceptions/**',
		'**/repository/**',
		'**/handler/**',
		'**/requests/**',
		'**/domain/**',
		'**/TestingWebApplication*',
]

jacocoTestReport {
	dependsOn(test)
	reports {
		html.enabled true

	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: excludeSourceDirs)
		}))
	}
	getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}

test.finalizedBy jacocoTestCoverageVerification
jacocoTestCoverageVerification {
	dependsOn(jacocoTestReport)
	violationRules {
		rule {
			limit {
				minimum = 0.6
			}
		}
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: excludeSourceDirs)
		}))
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.26'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation group: 'io.rest-assured', name: 'rest-assured-all', version: '4.1.2'

	testCompile "com.github.tomakehurst:wiremock-jre8:2.30.1"
	testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.0'

	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.5.1'
	testImplementation "com.h2database:h2"
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
	testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'

	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

pitest {
	targetClasses = ['com.peixoto.api.controllers*', 'com.peixoto.api.service*']
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
	junit5PluginVersion = '0.12'
	testSourceSets.set([sourceSets.test, sourceSets.integrationTest])
	jvmArgs.set(['-Xmx4096m'])
}

test {
	useJUnitPlatform() {
		excludeTags 'integrationTest'
	}
	testLogging {
		events "passed", "skipped", "failed"
	}
}

rootProject.tasks.named("processIntegrationTestResources") {
	duplicatesStrategy = 'include'
}